{\rtf1\ansi\ansicpg1251\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 exports.handler = function(context, event, callback) \{\
	let accessToken = Twilio.jwt.AccessToken;\
	let videoGrant = accessToken.VideoGrant;\
	let token = new accessToken(process.env.ACCOUNT_SID, process.env.API_KEY, process.env.API_SECRET)\
    \
    	\
	token.identity = event.identity;\
	const grant = new videoGrant();\
	token.addGrant(grant)\
	\
// 	callback(null, token.JWT)\
    let response = new Twilio.Response();\
    \
    let headers = \{\
        "Access-Control-Allow-Origin": "*",\
        "Access-Control-Allow-Methods": "GET,PUT,POST",\
        "Access-Control-Allow-Headers": "Content-Type"\
    \};\
    \
    response.setHeaders(headers);\
    \
    response.setBody(JSON.stringify(token.toJwt()));\
    \
    callback(null, response);\
\};}